import mymodule


def symbols(text):
    """Подсчет частоты символов в тексте"""
    # Создаем пустой словарь
    d = {}
    # Пробегаемся по каждому элементу в тексте
    for i in text:
        # Если элемент из теста соответствует
        # ключу в словаре, то увеличиваем 
        # значение на единицу  
        if i in d:
            d[i] += 1
        # Иначе создаем ключ соответствующий
        # элементу и значение равное единице
        else:
            d[i] = 1
    return(d)

def words(text):
    """Подсчет количества слов в тексте"""
    # Создаем список из текста, где делителем
    # является пробел 
    list_text = list(text.split())
    # Считаем длину list_text, это и будет
    # количество слов в тексте 
    return(len(list_text))

def sentences(text):
    """Подсчет количества предложений в тексте"""
    # Заменяем знак вопроса с пробелом на точку
    # с пробелом для дальнейшего упрощения поиска 
    # предложений в тексте 
    text = text.replace ("? ", ". ")
    # Аналогично заменяем знак восклицания с
    # пробелом на точку с пробелом 
    text = text.replace ("! ", ". ")
    # Создаем список, где разделителем будет
    # точка с пробелом 
    list_text = list(text.split(". "))
    # Возвращаем количество элементов в списке,
    # это и будет число предложений в тексте 
    return(len(list_text))

def work_with_words():
    print("*********   Программа анализа текста   *********")
    while True:
        text = input("Введите текст (Enter - взять данные из файла):")
        # Если пользователь не ввел текст,
        # то запрашиваем у него путь к файлу
        # из которого он хочет взять данные 
        if not text:
            road_to_file = (input("Укажите путь к файлу:"))
            if not road_to_file:
                print("Нет данных")
                continue
            # Если путь указан, то пробуем прочитать файл
            # по указанному пути 
            text = mymodule.read_file_b(road_to_file)
            # Если файл не удалось прочитать, то text получил
            # значение False и пользователь получил сообщение
            # об ошибке. Начинаем цикл сначала 
            if not text:
                print("Данных нет.\nПопробуйте снова.")
                continue
            # Т.к. модуль читает данные в бинарном виде,
            # то возвращаем их в str представление 
            text = text.decode('utf-8')
        print('Частота вхождения символов текст:')
        d = symbols(text)
        # Выводим результат для каждого символа(ключа) с
        # соответствующим количеством(значением).
        for i in d:
            print(f'{i}:{d[i]}')
        print(f'Количество слов в тексте:\n{words(text)}')
        print(f'Количество предложений в тексте:\n{sentences(text)}')
        break

work_with_words()